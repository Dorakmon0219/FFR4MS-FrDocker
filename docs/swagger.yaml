definitions:
  R.ResponseEntity:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  dto.AddContainerDTO:
    properties:
      serviceGroup:
        type: string
      serviceIP:
        type: string
      servicePort:
        type: string
    required:
    - serviceGroup
    - serviceIP
    - servicePort
    type: object
  dto.CpuInfo:
    properties:
      logicalCount:
        type: integer
      modelName:
        type: string
      percentage:
        type: number
      physicalCount:
        type: integer
    type: object
  dto.DiskInfo:
    properties:
      available:
        type: string
      percentage:
        type: number
      total:
        type: string
      used:
        type: string
    type: object
  dto.HostInfo:
    properties:
      bootTime:
        type: string
      dockerVersion:
        type: string
      kernel:
        type: string
      platForm:
        type: string
    type: object
  dto.MemoryInfo:
    properties:
      available:
        type: string
      percentage:
        type: number
      total:
        type: string
      used:
        type: string
    type: object
  dto.MicroServiceSytemInfo:
    properties:
      gateways:
        type: integer
      network:
        type: string
      registry:
        type: string
      serviceGroups:
        type: integer
      serviceInstances:
        $ref: '#/definitions/dto.ServiceInstancesInfo'
    type: object
  dto.ServiceInstancesInfo:
    properties:
      healthy:
        type: integer
      total:
        type: integer
      unHealthy:
        type: integer
    type: object
  dto.SystemPerfDTO:
    properties:
      cpu:
        $ref: '#/definitions/dto.CpuInfo'
      disk:
        $ref: '#/definitions/dto.DiskInfo'
      host:
        $ref: '#/definitions/dto.HostInfo'
      memory:
        $ref: '#/definitions/dto.MemoryInfo'
      mssystem:
        $ref: '#/definitions/dto.MicroServiceSytemInfo'
    type: object
  dto.UserInfoDTO:
    properties:
      avatar:
        type: string
      permissions:
        items:
          type: string
        type: array
      username:
        type: string
    type: object
  entity.UserEntity:
    properties:
      id:
        type: string
      password:
        type: string
      role:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  gin.H:
    additionalProperties: true
    type: object
  models.Traffic:
    properties:
      day:
        type: integer
      hour:
        type: integer
      level:
        type: string
      minute:
        type: integer
      month:
        type: integer
      number:
        type: integer
      year:
        type: integer
    type: object
  types.Container:
    properties:
      calls:
        items:
          type: string
        type: array
      entry:
        type: boolean
      gateway:
        type: string
      group:
        type: string
      health:
        type: boolean
      id:
        type: string
      ip:
        type: string
      leaf:
        type: boolean
      name:
        type: string
      port:
        type: string
      states:
        additionalProperties:
          items:
            $ref: '#/definitions/types.State'
          type: array
        type: object
    required:
    - ip
    type: object
  types.State:
    properties:
      ecc:
        type: number
      id:
        $ref: '#/definitions/types.StateId'
      k:
        type: integer
      maxTime:
        type: number
      minTime:
        type: number
      record:
        items:
          $ref: '#/definitions/types.StateRecord'
        type: array
      sigma:
        type: number
      threshold:
        type: number
      variance:
        $ref: '#/definitions/types.Vector'
    type: object
  types.StateEndpointEvent:
    properties:
      httpType:
        type: string
      ip:
        type: string
    type: object
  types.StateId:
    properties:
      endwith:
        $ref: '#/definitions/types.StateEndpointEvent'
      startWith:
        $ref: '#/definitions/types.StateEndpointEvent'
    type: object
  types.StateRecord:
    properties:
      ecc:
        type: number
      threshold:
        type: number
    type: object
  types.Vector:
    properties:
      data:
        items:
          type: number
        type: array
    type: object
info:
  contact:
    email: zengtao0618@163.com
    name: 曾涛
  description: 监控微服务系统中各个微服务实例的运行时状态以及所在容器的性能参数
  termsOfService: http://swagger.io/terms/
  title: FFR4MS Docker监控模块Fr-Docker
  version: "1.0"
paths:
  /admin/user/add:
    post:
      consumes:
      - application/json
      description: 管理员添加新用户
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.UserEntity'
      produces:
      - application/json
      responses:
        "200":
          description: 返回新增用户
          schema:
            allOf:
            - $ref: '#/definitions/R.ResponseEntity'
            - properties:
                data:
                  $ref: '#/definitions/entity.UserEntity'
              type: object
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 管理员添加用户接口
      tags:
      - 管理员操作
  /admin/user/delete:
    post:
      consumes:
      - application/json
      description: 管理删除用户
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户信息
        in: body
        name: users
        required: true
        schema:
          items:
            $ref: '#/definitions/entity.UserEntity'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: 返回删除用户数量
          schema:
            allOf:
            - $ref: '#/definitions/R.ResponseEntity'
            - properties:
                data:
                  type: integer
              type: object
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 管理员删除用户
      tags:
      - 管理员操作
  /admin/user/list:
    get:
      description: 管理员获取用户列表
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回用户列表
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 管理员获取用户列表
      tags:
      - 管理员操作
  /admin/user/update:
    post:
      consumes:
      - application/json
      description: 管理员更新用户信息
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.UserEntity'
      produces:
      - application/json
      responses:
        "200":
          description: 返回更新后的用户信息
          schema:
            allOf:
            - $ref: '#/definitions/R.ResponseEntity'
            - properties:
                data:
                  $ref: '#/definitions/entity.UserEntity'
              type: object
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 管理员更新用户信息
      tags:
      - 管理员操作
  /command/add:
    post:
      consumes:
      - application/json
      description: 添加微服务实例
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 微服务实例信息
        in: body
        name: addContainerDTO
        required: true
        schema:
          $ref: '#/definitions/dto.AddContainerDTO'
      produces:
      - application/json
      responses:
        "200":
          description: 返回新增的微服务实例信息
          schema:
            allOf:
            - $ref: '#/definitions/R.ResponseEntity'
            - properties:
                data:
                  $ref: '#/definitions/types.Container'
              type: object
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 添加微服务实例
      tags:
      - 微服务实例操作
  /command/delete:
    post:
      consumes:
      - application/json
      description: 下线微服务实例
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 下线微服务实例信息
        in: body
        name: deleteContainer
        required: true
        schema:
          $ref: '#/definitions/types.Container'
      produces:
      - application/json
      responses:
        "200":
          description: 返回成功信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 下线微服务实例
      tags:
      - 微服务实例操作
  /command/delete/batch:
    post:
      consumes:
      - application/json
      description: 批量下线微服务实例
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 下线微服务实例信息列表
        in: body
        name: deleteContainers
        required: true
        schema:
          items:
            $ref: '#/definitions/types.Container'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: 返回成功下线的微服务实例数量
          schema:
            allOf:
            - $ref: '#/definitions/R.ResponseEntity'
            - properties:
                data:
                  type: integer
              type: object
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 批量下线微服务实例
      tags:
      - 微服务实例操作
  /command/up:
    post:
      consumes:
      - application/json
      description: 上线微服务实例
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 上线的微服务实例信息
        in: body
        name: upContainer
        required: true
        schema:
          $ref: '#/definitions/types.Container'
      produces:
      - application/json
      responses:
        "200":
          description: 返回成功信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 上线微服务实例
      tags:
      - 微服务实例操作
  /container:
    get:
      description: 根据IP获取微服务容器信息
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 容器的IP地址
        in: query
        name: ip
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回对应IP地址的容器/所有容器
          schema:
            allOf:
            - $ref: '#/definitions/R.ResponseEntity'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.Container'
                  type: array
              type: object
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 根据IP获取微服务容器信息
      tags:
      - 微服务容器操作
  /container/calls:
    get:
      description: 获取微服务系统的服务调用链
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回微服务系统的服务调用链
          schema:
            allOf:
            - $ref: '#/definitions/R.ResponseEntity'
            - properties:
                data:
                  additionalProperties:
                    items:
                      type: string
                    type: array
                  type: object
              type: object
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 获取微服务系统的服务调用链
      tags:
      - 微服务容器操作
  /container/traffic:
    get:
      description: 获取微服务容器访问流量
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 容器的IP地址
        in: query
        name: ip
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回微服务容器访问流量
          schema:
            allOf:
            - $ref: '#/definitions/R.ResponseEntity'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Traffic'
                  type: array
              type: object
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 获取微服务容器访问流量
      tags:
      - 微服务容器操作
  /logs/container:
    get:
      description: 获取微服务容器运行日志
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 容器的IP地址
        in: query
        name: ip
        required: true
        type: string
      - description: 日志行数，默认100
        in: query
        name: tail
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回微服务容器运行日志
          schema:
            allOf:
            - $ref: '#/definitions/R.ResponseEntity'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 获取微服务容器运行日志
      tags:
      - 日志操作
  /logs/errors:
    get:
      description: 获取异常日志
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 是否已读
        in: query
        name: viewed
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: 返回异常日志
          schema:
            allOf:
            - $ref: '#/definitions/R.ResponseEntity'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 获取异常日志
      tags:
      - 日志操作
  /logs/monitor:
    get:
      description: 获取微服务容器监控日志
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 容器的IP地址
        in: query
        name: ip
        required: true
        type: string
      - description: 日志行数，默认100
        in: query
        name: tail
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回微服务容器监控日志
          schema:
            allOf:
            - $ref: '#/definitions/R.ResponseEntity'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 获取微服务容器监控日志
      tags:
      - 日志操作
  /perf/container:
    get:
      description: 获取微服务容器性能参数
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回微服务容器性能参数
          schema:
            allOf:
            - $ref: '#/definitions/R.ResponseEntity'
            - properties:
                data:
                  $ref: '#/definitions/dto.SystemPerfDTO'
              type: object
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 获取微服务容器性能参数
      tags:
      - 系统性能操作
  /perf/system:
    get:
      description: 获取服务器性能参数
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 容器的IP地址
        in: query
        name: ip
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回服务器性能参数
          schema:
            allOf:
            - $ref: '#/definitions/R.ResponseEntity'
            - properties:
                data:
                  $ref: '#/definitions/dto.SystemPerfDTO'
              type: object
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 获取服务器性能参数
      tags:
      - 系统性能操作
  /user/info:
    get:
      description: 获取用户信息
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回用户信息
          schema:
            allOf:
            - $ref: '#/definitions/R.ResponseEntity'
            - properties:
                data:
                  $ref: '#/definitions/dto.UserInfoDTO'
              type: object
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - 用户操作
  /user/login:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - description: 登录用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.UserEntity'
      produces:
      - application/json
      responses:
        "200":
          description: 返回登录Token
          schema:
            allOf:
            - $ref: '#/definitions/R.ResponseEntity'
            - properties:
                data:
                  $ref: '#/definitions/gin.H'
              type: object
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 用户登录
      tags:
      - 用户操作
  /user/logout:
    post:
      description: 退出登录
      parameters:
      - description: token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 返回登录Token
          schema:
            allOf:
            - $ref: '#/definitions/R.ResponseEntity'
            - properties:
                data:
                  $ref: '#/definitions/gin.H'
              type: object
      security:
      - ApiKeyAuth: []
      summary: 退出登录
      tags:
      - 用户操作
  /user/register:
    post:
      consumes:
      - application/json
      description: 用户注册
      parameters:
      - description: 注册用户信息
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/entity.UserEntity'
      produces:
      - application/json
      responses:
        "200":
          description: 返回成功信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
        "400":
          description: 返回失败信息
          schema:
            $ref: '#/definitions/R.ResponseEntity'
      security:
      - ApiKeyAuth: []
      summary: 用户注册
      tags:
      - 用户操作
swagger: "2.0"
